[tool:pytest]
minversion = 7.0
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Test markers
markers =
    unit: Unit tests
    integration: Integration tests
    performance: Performance tests
    load: Load tests
    stress: Stress tests
    slow: Slow tests (may take a long time)
    redis_available: Tests that require Redis
    postgres_available: Tests that require PostgreSQL
    gpu_available: Tests that require GPU
    network: Tests that require network access

# Test discovery
addopts = 
    --strict-markers
    --strict-config
    --verbose
    --tb=short
    --showlocals
    --durations=10
    --color=yes
    --code-highlight=yes

# Coverage settings
[coverage:run]
source = src
omit = 
    */tests/*
    */test_*
    */__pycache__/*
    */migrations/*
    */venv/*
    */env/*

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    raise AssertionError
    raise NotImplementedError
    if __name__ == .__main__.:
    class .*\(Protocol\):
    @(abc\.)?abstractmethod

show_missing = True
skip_covered = False
precision = 2

[coverage:html]
directory = test_reports/coverage_html

[coverage:xml]
output = test_reports/coverage.xml

# Timeout settings
timeout = 300
timeout_method = thread

# Parallel execution
dist = loadscope
tx = popen//python

# Logging
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

log_file = test_reports/pytest.log
log_file_level = DEBUG
log_file_format = %(asctime)s [%(levelname)8s] %(filename)s:%(lineno)d %(funcName)s(): %(message)s
log_file_date_format = %Y-%m-%d %H:%M:%S

# Warnings
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::FutureWarning
    error::UserWarning

# Test order
randomly-seed = 42
randomly-dont-shuffle = integration,load,stress

# Memory profiling
memray-bin-path = test_reports/memray
memray-bin-prefix = test_

# Benchmark settings
benchmark-only = false
benchmark-sort = mean
benchmark-columns = min,max,mean,stddev,median,iqr,outliers,rounds,iterations
benchmark-histogram = test_reports/benchmark_histogram.svg
benchmark-json = test_reports/benchmark.json

# HTML report settings
html = test_reports/report.html
self-contained-html = true

# JUnit XML
junit-xml = test_reports/junit.xml
junit-xml-namespace = alpha_discovery 