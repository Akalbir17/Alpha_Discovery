version: '3.8'

services:
  # =============================================================================
  # DATABASE SERVICES
  # =============================================================================
  
  postgres:
    image: postgres:15-alpine
    container_name: alpha-discovery-postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-alpha_discovery}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    networks:
      - alpha-discovery
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres}"]
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '1.0'
        reservations:
          memory: 1G
          cpus: '0.5'

  redis:
    image: redis:7-alpine
    container_name: alpha-discovery-redis
    command: redis-server --requirepass ${REDIS_PASSWORD} --appendonly yes
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - alpha-discovery
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '0.5'
        reservations:
          memory: 512M
          cpus: '0.25'

  timescaledb:
    image: timescale/timescaledb:latest-pg15
    container_name: alpha-discovery-timescaledb
    environment:
      POSTGRES_DB: ${TIMESCALE_DB:-market_data}
      POSTGRES_USER: ${TIMESCALE_USER:-timescale}
      POSTGRES_PASSWORD: ${TIMESCALE_PASSWORD}
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
    volumes:
      - timescale_data:/var/lib/postgresql/data
      - ./timescale-init:/docker-entrypoint-initdb.d
    ports:
      - "5433:5432"
    networks:
      - alpha-discovery
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${TIMESCALE_USER:-timescale}"]
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          memory: 4G
          cpus: '2.0'
        reservations:
          memory: 2G
          cpus: '1.0'

  # =============================================================================
  # APPLICATION SERVICES
  # =============================================================================

  market-data-service:
    image: ${DOCKER_REGISTRY:-localhost:5000}/alpha-discovery-market-data:${DOCKER_TAG:-latest}
    container_name: alpha-discovery-market-data
    environment:
      - ENVIRONMENT=production
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_DB=${POSTGRES_DB:-alpha_discovery}
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - TIMESCALE_HOST=timescaledb
      - TIMESCALE_PORT=5432
      - TIMESCALE_DB=${TIMESCALE_DB:-market_data}
      - TIMESCALE_USER=${TIMESCALE_USER:-timescale}
      - TIMESCALE_PASSWORD=${TIMESCALE_PASSWORD}
      - ALPHA_VANTAGE_API_KEY=${ALPHA_VANTAGE_API_KEY}
      - NASDAQ_API_KEY=${NASDAQ_API_KEY}
      - YAHOO_FINANCE_API_KEY=${YAHOO_FINANCE_API_KEY}
    volumes:
      - ./configs:/app/configs:ro
      - market_data_logs:/app/logs
    ports:
      - "8001:8001"
    networks:
      - alpha-discovery
    depends_on:
      - postgres
      - redis
      - timescaledb
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '1.0'
        reservations:
          memory: 1G
          cpus: '0.5'

  trading-engine:
    image: ${DOCKER_REGISTRY:-localhost:5000}/alpha-discovery-trading-engine:${DOCKER_TAG:-latest}
    container_name: alpha-discovery-trading-engine
    environment:
      - ENVIRONMENT=production
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_DB=${POSTGRES_DB:-alpha_discovery}
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - ALPACA_API_KEY=${ALPACA_API_KEY}
      - ALPACA_API_SECRET=${ALPACA_API_SECRET}
      - IB_CLIENT_ID=${IB_CLIENT_ID}
      - IB_CLIENT_SECRET=${IB_CLIENT_SECRET}
    volumes:
      - ./configs:/app/configs:ro
      - trading_logs:/app/logs
    ports:
      - "8002:8002"
    networks:
      - alpha-discovery
    depends_on:
      - postgres
      - redis
      - market-data-service
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8002/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '1.0'
        reservations:
          memory: 1G
          cpus: '0.5'

  risk-service:
    image: ${DOCKER_REGISTRY:-localhost:5000}/alpha-discovery-risk-service:${DOCKER_TAG:-latest}
    container_name: alpha-discovery-risk-service
    environment:
      - ENVIRONMENT=production
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_DB=${POSTGRES_DB:-alpha_discovery}
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    volumes:
      - ./configs:/app/configs:ro
      - risk_logs:/app/logs
    ports:
      - "8003:8003"
    networks:
      - alpha-discovery
    depends_on:
      - postgres
      - redis
      - market-data-service
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8003/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '0.5'
        reservations:
          memory: 512M
          cpus: '0.25'

  sentiment-service:
    image: ${DOCKER_REGISTRY:-localhost:5000}/alpha-discovery-sentiment-service:${DOCKER_TAG:-latest}
    container_name: alpha-discovery-sentiment-service
    environment:
      - ENVIRONMENT=production
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_DB=${POSTGRES_DB:-alpha_discovery}
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - REDDIT_CLIENT_ID=${REDDIT_CLIENT_ID}
      - REDDIT_CLIENT_SECRET=${REDDIT_CLIENT_SECRET}
      - TWITTER_BEARER_TOKEN=${TWITTER_BEARER_TOKEN}
    volumes:
      - ./configs:/app/configs:ro
      - sentiment_logs:/app/logs
    ports:
      - "8004:8004"
    networks:
      - alpha-discovery
    depends_on:
      - postgres
      - redis
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8004/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '0.5'
        reservations:
          memory: 512M
          cpus: '0.25'

  # =============================================================================
  # API AND FRONTEND SERVICES
  # =============================================================================

  api-gateway:
    image: ${DOCKER_REGISTRY:-localhost:5000}/alpha-discovery-api:${DOCKER_TAG:-latest}
    container_name: alpha-discovery-api-gateway
    environment:
      - ENVIRONMENT=production
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_DB=${POSTGRES_DB:-alpha_discovery}
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - MARKET_DATA_SERVICE_URL=http://market-data-service:8001
      - TRADING_ENGINE_URL=http://trading-engine:8002
      - RISK_SERVICE_URL=http://risk-service:8003
      - SENTIMENT_SERVICE_URL=http://sentiment-service:8004
    volumes:
      - ./configs:/app/configs:ro
      - api_logs:/app/logs
    ports:
      - "8000:8000"
    networks:
      - alpha-discovery
    depends_on:
      - postgres
      - redis
      - market-data-service
      - trading-engine
      - risk-service
      - sentiment-service
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '0.5'
        reservations:
          memory: 512M
          cpus: '0.25'

  dashboard:
    image: ${DOCKER_REGISTRY:-localhost:5000}/alpha-discovery-dashboard:${DOCKER_TAG:-latest}
    container_name: alpha-discovery-dashboard
    environment:
      - ENVIRONMENT=production
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_DB=${POSTGRES_DB:-alpha_discovery}
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - API_BASE_URL=http://api-gateway:8000
    volumes:
      - ./configs:/app/configs:ro
      - dashboard_logs:/app/logs
    ports:
      - "8501:8501"
    networks:
      - alpha-discovery
    depends_on:
      - api-gateway
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8501/_stcore/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '0.5'
        reservations:
          memory: 512M
          cpus: '0.25'

  # =============================================================================
  # REVERSE PROXY
  # =============================================================================

  nginx:
    image: nginx:alpine
    container_name: alpha-discovery-nginx
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - nginx_logs:/var/log/nginx
    ports:
      - "80:80"
      - "443:443"
    networks:
      - alpha-discovery
    depends_on:
      - api-gateway
      - dashboard
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

# =============================================================================
# VOLUMES
# =============================================================================

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  timescale_data:
    driver: local
  market_data_logs:
    driver: local
  trading_logs:
    driver: local
  risk_logs:
    driver: local
  sentiment_logs:
    driver: local
  api_logs:
    driver: local
  dashboard_logs:
    driver: local
  nginx_logs:
    driver: local

# =============================================================================
# NETWORKS
# =============================================================================

networks:
  alpha-discovery:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16 